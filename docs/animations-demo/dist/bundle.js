!function(){"use strict";function t(t,n){t.prototype=Object.create(n.prototype),t.prototype.constructor=t,e(t,n)}function e(t,n){return(e=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,n)}!function(){var e=Inferno.Component,n=Inferno.createElement,i=Inferno.Animation,o=i.AnimatedComponent;i.componentDidAppear,i.componentWillDisappear;var r=i.utils;r.addClassName,r.removeClassName,r.forceReflow,r.registerTransitionListener;var a=function(e){function i(){return e.apply(this,arguments)||this}return t(i,e),i.prototype.render=function(){var t=this;return n("li",{className:"item",onClick:function(e){return t.props.onClick(e,t.props.index)}},n("div",{className:"inner"},[n("img",{width:"120px",height:"120px",src:"avatar.png"}),n("div",{className:"body"},[n("h2",null,this.props.children),n("h3",null,"Inferno is a blazingly fast framework.")])]))},i}(o),s=function(e){function i(){var t;return(t=e.call(this)||this).doRemove=function(e,n){e.preventDefault();var i=t.state.items.concat([]);i.splice(n,1),t.setState({items:i})},t.doAdd=function(e){e.preventDefault();var n=t.state.items.concat([]),i=0===n.length?0:n[n.length-1].key+1;n.push({key:i}),t.setState({items:n})},t.renderItem=function(e,i){return n(a,{key:e.key,index:i,animation:t.props.animation,onClick:t.doRemove},"This line is nice with "+(e.key+1)+" bar")},t.state={items:[]},t.items=[],t}t(i,e);var o=i.prototype;return o.componentDidMount=function(){for(var t=0;this.items.length<20;)this.items[this.items.length]={key:t++};this.setState({items:this.items})},o.render=function(){return n("div",null,[n("ul",null,this.state.items.map(this.renderItem)),n("h2",null,this.props.animation),n("p",null,this.props.description),n("button",{onClick:this.doAdd},"Add")])},i}(e);document.addEventListener("DOMContentLoaded",(function(){var t=document.querySelector("#App1");Inferno.render(n(s,{animation:"Complex",description:"Each card <li> animates height and opacity on add. The image and body of each card animates using the card animation CSS-classes but with different transitions. The card inherits AnimatedComponet which is only aware of the card animation. The child animations need to be finished when the card animations are finished."}),t)}))}()}();

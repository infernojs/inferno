!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("./inferno-component"),require("mobx"),require("./inferno"),require("./inferno-create-class"),require("hoist-non-inferno-statics"),require("./inferno-create-element")):"function"==typeof define&&define.amd?define(["inferno-component","mobx","inferno","inferno-create-class","hoist-non-inferno-statics","inferno-create-element"],t):e.InfernoMobx=t(e.Component,e.mobx,e.inferno,e.createClass,e.hoistStatics,e.createElement)}(this,function(e,t,n,o,r,i){"use strict";function s(e){throw e||(e=l),new Error("Inferno Error: "+e)}function a(e){var t=n.findDOMNode(e);t&&b&&b.set(t,e),x.emit({event:"render",renderTime:e.__$mobRenderEnd-e.__$mobRenderStart,totalTime:Date.now()-e.__$mobRenderStart,component:e,node:t})}function c(){"undefined"==typeof WeakMap&&s("[inferno-mobx] tracking components is not supported in this browser."),v||(v=!0)}function p(e,t){var n=o({displayName:t.name,render:function(){var n=this,o={};for(var r in this.props)n.props.hasOwnProperty(r)&&(o[r]=n.props[r]);var s=e(this.context.mobxStores||{},o,this.context)||{};for(var a in s)o[a]=s[a];return o.ref=function(e){n.wrappedInstance=e},i(t,o,this.props.children)}});return n.contextTypes={mobxStores:function(){}},r(n,t),n}function u(e){var t=arguments;if("function"!=typeof e){for(var n=[],o=0;o<arguments.length;o++)n[o]=t[o];e=w(n)}return function(t){return p(e,t)}}function f(t,n){if(void 0===n&&(n=null),"string"==typeof t&&s("Store names should be provided as array"),Array.isArray(t))return n?u.apply(null,t)(f(n)):function(e){return f(t,e)};var r=t;if(!("function"!=typeof r||r.prototype&&r.prototype.render||r.isReactClass||e.isPrototypeOf(r))){var i=o({displayName:r.displayName||r.name,propTypes:r.propTypes,contextTypes:r.contextTypes,getDefaultProps:function(){return r.defaultProps},render:function(){return r.call(this,this.props,this.context)}});return f(i)}r||s('Please pass a valid component to "observer"');var a=r.prototype||r;return S.forEach(function(e){return d(a,e)}),a.shouldComponentUpdate||(a.shouldComponentUpdate=_.shouldComponentUpdate),r.isMobXReactObserver=!0,r}function d(e,t){var n=e[t],o=_[t];n?e[t]=function(){n.apply(this,arguments),o.apply(this,arguments)}:e[t]=o}e="default"in e?e.default:e,o="default"in o?o.default:o,r="default"in r?r.default:r,i="default"in i?i.default:i;var l="a runtime error occured! Use Inferno in development environment to find the error.",m={children:!0,key:!0,ref:!0},h=function(e){function t(t,n){e.call(this,t,n),this.contextTypes={mobxStores:function(){}},this.childContextTypes={mobxStores:function(){}},this.store=t.store}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){return this.props.children},t.prototype.getChildContext=function(){var e=this,t={},n=this.context.mobxStores;if(n)for(var o in n)t[o]=n[o];for(var r in this.props)m[r]||(t[r]=e.props[r]);return{mobxStores:t}},t}(e),y=function(){this.listeners=[]};y.prototype.on=function(e){var t=this;return this.listeners.push(e),function(){var n=t.listeners.indexOf(e);n!==-1&&t.listeners.splice(n,1)}},y.prototype.emit=function(e){this.listeners.forEach(function(t){return t(e)})};var v=!1,b=new WeakMap,x=new y,_={componentWillMount:function(){var n,o=this,r=this.displayName||this.name||this.constructor&&(this.constructor.displayName||this.constructor.name)||"<component>",i=this._reactInternalInstance&&this._reactInternalInstance._rootNodeID,s=this.render.bind(this),a=!1,c=function(c,p){var u=function(){return s(c,p)},f=function(){a=!1;var e=void 0;return n.track(function(){v&&(o.__$mobRenderStart=Date.now()),e=t.extras.allowStateChanges(!1,u),v&&(o.__$mobRenderEnd=Date.now())}),e};return n=new t.Reaction(r+"#"+i+".render()",function(){a||(a=!0,"function"==typeof o.componentWillReact&&o.componentWillReact(),o.__$mobxIsUnmounted!==!0&&e.prototype.forceUpdate.call(o))}),f.$mobx=n,o.render=f,f()};this.render=c},componentWillUnmount:function(){if(this.render.$mobx&&this.render.$mobx.dispose(),this.__$mobxIsUnmounted=!0,v){var e=n.findDOMNode(this);e&&b&&b.delete(e),x.emit({event:"destroy",component:this,node:e})}},componentDidMount:function(){v&&a(this)},componentDidUpdate:function(){v&&a(this)},shouldComponentUpdate:function(e,n){var o=this;if(this.state!==n)return!0;var r=Object.keys(this.props);if(r.length!==Object.keys(e).length)return!0;for(var i=r.length-1;i>=0;i--){var s=r[i],a=e[s];if(a!==o.props[s])return!0;if(a&&"object"==typeof a&&!t.isObservable(a))return!0}return!1}},w=function(e){return function(t,n){return e.forEach(function(e){if(!(e in n)){if(!(e in t))throw new Error('MobX observer: Store "'+e+'" is not available! Make sure it is provided by some Provider');n[e]=t[e]}}),n}},S=["componentWillMount","componentWillUnmount","componentDidMount","componentDidUpdate"],C={Provider:h,connect:f,observer:f,trackComponents:c,renderReporter:x,componentByNodeRegistery:b};return C});
